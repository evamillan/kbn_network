{"version":3,"file":"kbnNetwork.chunk.0.js","sources":["/plugin:kbnNetwork/plugins/network_vis/public/components/kbn_network_vis_options.tsx","/plugin:kbnNetwork/plugins/network_vis/public/components/number_input.tsx","/plugin:kbnNetwork/plugins/network_vis/public/components/switch.tsx"],"sourcesContent":["/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { i18n } from '@osd/i18n';\nimport { FormattedMessage } from '@osd/i18n/react';\nimport { EuiPanel, EuiSpacer, EuiTitle, EuiSelect, EuiFormRow, EuiColorPicker } from '@elastic/eui';\nimport { NumberInputOption } from './number_input';\nimport { SwitchOption } from './switch';\n\nfunction KbnNetworkOptions(_ref) {\n  let {\n    stateParams,\n    setValue\n  } = _ref;\n  const shapeOptions = [{\n    value: 'circle',\n    text: 'Circle'\n  }, {\n    value: 'dot',\n    text: 'Dot'\n  }, {\n    value: 'ellipse',\n    text: 'Ellipse'\n  }, {\n    value: 'database',\n    text: 'Database'\n  }, {\n    value: 'box',\n    text: 'Box'\n  }, {\n    value: 'text',\n    text: 'Text only'\n  }, {\n    value: 'diamond',\n    text: 'Diamond'\n  }, {\n    value: 'star',\n    text: 'Star'\n  }, {\n    value: 'triangle',\n    text: 'Triangle'\n  }, {\n    value: 'triangleDown',\n    text: 'Triangle down'\n  }, {\n    value: 'square',\n    text: 'Square'\n  }];\n  const arrowPositionOptions = [{\n    value: 'from',\n    text: 'Beginning'\n  }, {\n    value: 'middle',\n    text: 'Middle'\n  }, {\n    value: 'to',\n    text: 'End'\n  }];\n  const smoothTypeOptions = [{\n    value: 'dynamic',\n    text: 'Dynamic'\n  }, {\n    value: 'continuous',\n    text: 'Continous anchor'\n  }, {\n    value: 'discrete',\n    text: 'Discrete anchor'\n  }, {\n    value: 'diagonalCross',\n    text: 'Diagonal anchor'\n  }, {\n    value: 'straightCross',\n    text: 'Straight line'\n  }, {\n    value: 'horizontal',\n    text: 'Horizontal anchor'\n  }, {\n    value: 'vertical',\n    text: 'Vertical anchor'\n  }, {\n    value: 'curvedCW',\n    text: 'Clock-wise curve'\n  }, {\n    value: 'curvedCCW',\n    text: 'Counter clock-wise curve'\n  }, {\n    value: 'cubicBezier',\n    text: 'Cubic bezier'\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kbn-network-vis-params\"\n  }, /*#__PURE__*/React.createElement(EuiPanel, {\n    paddingSize: \"s\"\n  }, /*#__PURE__*/React.createElement(EuiTitle, {\n    size: \"xs\"\n  }, /*#__PURE__*/React.createElement(\"h3\", null, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"visTypeKbnNetwork.params.networkSettingsSection\",\n    defaultMessage: \"Network Settings\"\n  }))), /*#__PURE__*/React.createElement(EuiSpacer, {\n    size: \"m\"\n  }), /*#__PURE__*/React.createElement(SwitchOption, {\n    label: i18n.translate('visTypeKbnNetwork.params.showLabels', {\n      defaultMessage: 'Show labels'\n    }),\n    paramName: \"showLabels\",\n    value: stateParams.showLabels,\n    setValue: setValue\n  }), /*#__PURE__*/React.createElement(SwitchOption, {\n    label: i18n.translate('visTypeKbnNetwork.params.showPopup', {\n      defaultMessage: 'Show Popup'\n    }),\n    paramName: \"showPopup\",\n    value: stateParams.showPopup,\n    setValue: setValue\n  }), /*#__PURE__*/React.createElement(SwitchOption, {\n    label: i18n.translate('visTypeKbnNetwork.params.showColorLegend', {\n      defaultMessage: 'Show Color Legend'\n    }),\n    paramName: \"showColorLegend\",\n    value: stateParams.showColorLegend,\n    setValue: setValue\n  }), /*#__PURE__*/React.createElement(SwitchOption, {\n    label: i18n.translate('visTypeKbnNetwork.params.nodePhysics', {\n      defaultMessage: 'Node Physics'\n    }),\n    paramName: \"nodePhysics\",\n    value: stateParams.nodePhysics,\n    setValue: setValue\n  }), /*#__PURE__*/React.createElement(EuiSpacer, null), /*#__PURE__*/React.createElement(EuiTitle, {\n    size: \"xxs\"\n  }, /*#__PURE__*/React.createElement(\"h6\", null, \"Colors\")), /*#__PURE__*/React.createElement(EuiFormRow, {\n    fullWidth: true,\n    label: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"visTypeKbnNetwork.params.firstNodeColor\",\n      defaultMessage: \"First node\"\n    }),\n    display: \"columnCompressed\"\n  }, /*#__PURE__*/React.createElement(EuiColorPicker, {\n    compressed: true,\n    onChange: e => setValue('firstNodeColor', e),\n    color: stateParams.firstNodeColor,\n    fullWidth: true\n  })), /*#__PURE__*/React.createElement(EuiFormRow, {\n    fullWidth: true,\n    label: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"visTypeKbnNetwork.params.secondNodeColor\",\n      defaultMessage: \"Second node\"\n    }),\n    display: \"columnCompressed\"\n  }, /*#__PURE__*/React.createElement(EuiColorPicker, {\n    compressed: true,\n    onChange: e => setValue('secondNodeColor', e),\n    color: stateParams.secondNodeColor,\n    fullWidth: true\n  })), /*#__PURE__*/React.createElement(EuiFormRow, {\n    fullWidth: true,\n    label: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"visTypeKbnNetwork.params.labelColor\",\n      defaultMessage: \"Label\"\n    }),\n    display: \"columnCompressed\"\n  }, /*#__PURE__*/React.createElement(EuiColorPicker, {\n    compressed: true,\n    onChange: e => setValue('labelColor', e),\n    color: stateParams.labelColor,\n    fullWidth: true\n  })), /*#__PURE__*/React.createElement(EuiSpacer, null), /*#__PURE__*/React.createElement(EuiTitle, {\n    size: \"xxs\"\n  }, /*#__PURE__*/React.createElement(\"h6\", null, \"Shapes\")), /*#__PURE__*/React.createElement(EuiFormRow, {\n    label: \"Shape of first node\",\n    fullWidth: true,\n    display: \"columnCompressed\"\n  }, /*#__PURE__*/React.createElement(EuiSelect, {\n    fullWidth: true,\n    compressed: true,\n    options: shapeOptions,\n    value: stateParams.shapeFirstNode,\n    onChange: e => setValue('shapeFirstNode', e.target.value)\n  })), /*#__PURE__*/React.createElement(EuiFormRow, {\n    label: \"Shape of second node\",\n    fullWidth: true,\n    display: \"columnCompressed\"\n  }, /*#__PURE__*/React.createElement(EuiSelect, {\n    fullWidth: true,\n    compressed: true,\n    options: shapeOptions,\n    value: stateParams.shapeSecondNode,\n    onChange: e => setValue('shapeSecondNode', e.target.value)\n  })), /*#__PURE__*/React.createElement(EuiSpacer, null), /*#__PURE__*/React.createElement(EuiTitle, {\n    size: \"xxs\"\n  }, /*#__PURE__*/React.createElement(\"h6\", null, \"Size\")), /*#__PURE__*/React.createElement(NumberInputOption, {\n    label: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"visTypeTable.params.maxNodeSize\",\n      defaultMessage: \"Max node size\"\n    }),\n    value: stateParams.maxNodeSize,\n    paramName: \"maxNodeSize\",\n    setValue: setValue\n  }), /*#__PURE__*/React.createElement(NumberInputOption, {\n    label: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"visTypeTable.params.minNodeSize\",\n      defaultMessage: \"Min node size\"\n    }),\n    value: stateParams.minNodeSize,\n    paramName: \"minNodeSize\",\n    setValue: setValue\n  }), /*#__PURE__*/React.createElement(NumberInputOption, {\n    label: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"visTypeTable.params.maxEdgeSize\",\n      defaultMessage: \"Max edge width\"\n    }),\n    value: stateParams.maxEdgeSize,\n    paramName: \"maxEdgeSize\",\n    setValue: setValue\n  }), /*#__PURE__*/React.createElement(NumberInputOption, {\n    label: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"visTypeTable.params.minEdgeSize\",\n      defaultMessage: \"Min edge width\"\n    }),\n    value: stateParams.minEdgeSize,\n    paramName: \"minEdgeSize\",\n    setValue: setValue\n  }), /*#__PURE__*/React.createElement(EuiSpacer, null), /*#__PURE__*/React.createElement(EuiTitle, {\n    size: \"xxs\"\n  }, /*#__PURE__*/React.createElement(\"h6\", null, \"Directional Edges\")), /*#__PURE__*/React.createElement(EuiSpacer, {\n    size: \"s\"\n  }), /*#__PURE__*/React.createElement(SwitchOption, {\n    label: i18n.translate('visTypeKbnNetwork.params.displayArrow', {\n      defaultMessage: 'Display directional edges'\n    }),\n    paramName: \"displayArrow\",\n    value: stateParams.displayArrow,\n    setValue: setValue\n  }), /*#__PURE__*/React.createElement(EuiFormRow, {\n    label: \"Endpoint position\",\n    fullWidth: true,\n    display: \"columnCompressed\"\n  }, /*#__PURE__*/React.createElement(EuiSelect, {\n    fullWidth: true,\n    compressed: true,\n    options: arrowPositionOptions,\n    value: stateParams.posArrow,\n    onChange: e => setValue('posArrow', e.target.value)\n  })), /*#__PURE__*/React.createElement(EuiFormRow, {\n    label: \"Endpoint type\",\n    fullWidth: true,\n    display: \"columnCompressed\"\n  }, /*#__PURE__*/React.createElement(EuiSelect, {\n    fullWidth: true,\n    compressed: true,\n    options: [{\n      value: 'arrow',\n      text: 'Arrow'\n    }, {\n      value: 'circle',\n      text: 'Circle'\n    }],\n    value: stateParams.shapeArrow,\n    onChange: e => setValue('shapeArrow', e.target.value)\n  })), /*#__PURE__*/React.createElement(EuiFormRow, {\n    label: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"visTypeKbnNetwork.params.smoothType\",\n      defaultMessage: \"Smooth Type\"\n    }),\n    fullWidth: true,\n    display: \"columnCompressed\"\n  }, /*#__PURE__*/React.createElement(EuiSelect, {\n    fullWidth: true,\n    compressed: true,\n    options: smoothTypeOptions,\n    value: stateParams.smoothType,\n    onChange: e => setValue('smoothType', e.target.value)\n  })), /*#__PURE__*/React.createElement(NumberInputOption, {\n    label: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"visTypeTable.params.scaleArrow\",\n      defaultMessage: \"Scale factor\"\n    }),\n    value: stateParams.scaleArrow,\n    paramName: \"scaleArrow\",\n    setValue: setValue\n  }), /*#__PURE__*/React.createElement(EuiSpacer, null), /*#__PURE__*/React.createElement(EuiTitle, {\n    size: \"xxs\"\n  }, /*#__PURE__*/React.createElement(\"h6\", null, \"Network constants\")), /*#__PURE__*/React.createElement(NumberInputOption, {\n    label: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"visTypeTable.params.springConstant\",\n      defaultMessage: \"Spring Force\"\n    }),\n    value: stateParams.springConstant,\n    paramName: \"springConstant\",\n    setValue: setValue\n  }), /*#__PURE__*/React.createElement(NumberInputOption, {\n    label: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"visTypeTable.params.gravitationalConstant\",\n      defaultMessage: \"Attraction Force\"\n    }),\n    value: stateParams.gravitationalConstant,\n    paramName: \"gravitationalConstant\",\n    setValue: setValue\n  }), /*#__PURE__*/React.createElement(EuiSpacer, null), /*#__PURE__*/React.createElement(EuiTitle, {\n    size: \"xxs\"\n  }, /*#__PURE__*/React.createElement(\"h6\", null, \"Top values\")), /*#__PURE__*/React.createElement(NumberInputOption, {\n    label: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"visTypeTable.params.maxCutMetricSizeNode\",\n      defaultMessage: \"Node size\"\n    }),\n    value: stateParams.maxCutMetricSizeNode,\n    paramName: \"maxCutMetricSizeNode\",\n    setValue: setValue\n  }), /*#__PURE__*/React.createElement(NumberInputOption, {\n    label: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"visTypeTable.params.maxCutMetricSizeEdge\",\n      defaultMessage: \"Edge size\"\n    }),\n    value: stateParams.maxCutMetricSizeEdge,\n    paramName: \"maxCutMetricSizeEdge\",\n    setValue: setValue\n  }), /*#__PURE__*/React.createElement(NumberInputOption, {\n    label: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"visTypeTable.params.minCutMetricSizeNode\",\n      defaultMessage: \"Don't show nodes below this value\"\n    }),\n    value: stateParams.minCutMetricSizeNode,\n    paramName: \"minCutMetricSizeNode\",\n    setValue: setValue\n  })), /*#__PURE__*/React.createElement(EuiSpacer, {\n    size: \"m\"\n  }));\n} // default export required for React.Lazy\n// eslint-disable-next-line import/no-default-export\n\n\nexport { KbnNetworkOptions as default };","import React from 'react';\nimport { EuiFormRow, EuiFieldNumber } from '@elastic/eui';\n\nfunction NumberInputOption(_ref) {\n  let {\n    'data-test-subj': dataTestSubj,\n    disabled,\n    helpText,\n    error,\n    isInvalid,\n    label,\n    placeholder,\n    paramName,\n    value = '',\n    setValue\n  } = _ref;\n\n  const setNumber = (paramName, value) => {\n    if (value) {\n      setValue(paramName, Number(value));\n    } else {\n      setValue(paramName, '');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(EuiFormRow, {\n    helpText: helpText,\n    label: label,\n    error: error,\n    isInvalid: isInvalid,\n    fullWidth: true,\n    display: \"columnCompressed\"\n  }, /*#__PURE__*/React.createElement(EuiFieldNumber, {\n    compressed: true,\n    fullWidth: true,\n    isInvalid: isInvalid,\n    placeholder: placeholder,\n    \"data-test-subj\": dataTestSubj,\n    disabled: disabled,\n    value: value,\n    onChange: ev => setNumber(paramName, ev.target.value)\n  }));\n}\n\nexport { NumberInputOption };","/*\n * Licensed to Elasticsearch B.V. under one or more contributor\n * license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright\n * ownership. Elasticsearch B.V. licenses this file to you under\n * the Apache License, Version 2.0 (the \"License\"); you may\n * not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { EuiFormRow, EuiSwitch, EuiIconTip } from '@elastic/eui';\n\nfunction SwitchOption(_ref) {\n  let {\n    'data-test-subj': dataTestSubj,\n    icontip,\n    label,\n    disabled,\n    paramName,\n    value = false,\n    setValue\n  } = _ref;\n  return /*#__PURE__*/React.createElement(EuiFormRow, {\n    fullWidth: true\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EuiSwitch, {\n    compressed: true,\n    label: label,\n    checked: value,\n    disabled: disabled,\n    \"data-test-subj\": dataTestSubj,\n    onChange: ev => setValue(paramName, ev.target.checked)\n  }), icontip && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", null, \"\\xA0\"), /*#__PURE__*/React.createElement(EuiIconTip, {\n    content: icontip,\n    position: \"right\"\n  }))));\n}\n\nexport { SwitchOption };"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1VA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}